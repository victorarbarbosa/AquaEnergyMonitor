// <auto-generated />
using System;
using AquaEnergyMonitor.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AquaEnergyMonitor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250512012151_ForthMigration")]
    partial class ForthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("AquaEnergyMonitor.Models.ConsumoAgua", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("ConsumoMetrosCubicos")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ConsumoAgua");
                });

            modelBuilder.Entity("AquaEnergyMonitor.Models.ConsumoEnergia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("ConsumoKiloWatts")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ConsumoEnergia");
                });

            modelBuilder.Entity("AquaEnergyMonitor.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Perfil")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantPessoas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AquaEnergyMonitor.Models.ConsumoAgua", b =>
                {
                    b.HasOne("AquaEnergyMonitor.Models.Usuario", "Usuario")
                        .WithMany("ConsumoAgua")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AquaEnergyMonitor.Models.ConsumoEnergia", b =>
                {
                    b.HasOne("AquaEnergyMonitor.Models.Usuario", "Usuario")
                        .WithMany("consumoEnergia")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AquaEnergyMonitor.Models.Usuario", b =>
                {
                    b.Navigation("ConsumoAgua");

                    b.Navigation("consumoEnergia");
                });
#pragma warning restore 612, 618
        }
    }
}
