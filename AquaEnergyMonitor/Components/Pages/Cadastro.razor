@page "/cadastro"
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using AquaEnergyMonitor.Models
@using AquaEnergyMonitor.Models.Enuns
@using AquaEnergyMonitor.Services

@inject AuthService Service
@inject NavigationManager NavManager

<div class="page-background">
    <div class="form-container">
        <h3 class="form-title">Cadastro de Usuário</h3>

        <EditForm Model="@User" OnValidSubmit="Cadastrar" FormName="cadastro">
            <DataAnnotationsValidator />

            <div class="form-grid">
                <div class="form-group">
                    <InputText @bind-Value="User.Nome" class="form-control" placeholder="Nome" />
                    <ValidationMessage For="@(() => User.Nome)" style="font-size: 15px;"/>
                </div>

                <div class="form-group">
                    <InputText @bind-Value="User.Sobrenome" class="form-control" placeholder="Sobrenome" />
                    <ValidationMessage For="@(() => User.Sobrenome)" style="font-size: 15px;" />
                </div>

                <div class="form-group form-grid-full">
                    <InputText @bind-Value="User.Email" type="email" class="form-control" placeholder="E-mail" />
                    <ValidationMessage For="@(() => User.Email)" style="font-size: 15px;" />
                </div>

                <!-- Campos de senha lado a lado -->
                <div class="form-group form-grid-full d-flex gap-3">
                    <div class="flex-fill">
                        <div class="d-flex flex-column position-relative">
                            <div class="position-relative">
                                <InputText @bind-Value="User.Senha"
                                           type="@SenhaInputType"
                                           class="form-control"
                                           placeholder="Senha" />
                                <button type="button"
                                        class="btn btn-sm btn-link position-absolute"
                                        style="top: 50%; right: 10px; transform: translateY(-50%);"
                                        @onclick="ToggleSenhaVisibility">
                                    <i class="@SenhaIconClass text-dark"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => User.Senha)" style="font-size: 15px;" />
                        </div>
                    </div>

                    <div class="flex-fill">
                        <div class="d-flex flex-column position-relative">
                            <div class="position-relative">
                                <InputText @bind-Value="User.ConfirmaSenha"
                                           type="@ConfirmaSenhaInputType"
                                           class="form-control"
                                           placeholder="Confirmar Senha" />
                                <button type="button"
                                        class="btn btn-sm btn-link position-absolute"
                                        style="top: 50%; right: 10px; transform: translateY(-50%);"
                                        @onclick="ToggleConfirmaSenhaVisibility">
                                    <i class="@ConfirmaSenhaIconClass text-dark"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => User.ConfirmaSenha)" style="font-size: 15px;" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <InputText @bind-Value="User.Endereco" class="form-control" placeholder="Endereço (Rua e Número)" />
                    <ValidationMessage For="@(() => User.Endereco)" style="font-size: 15px;" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="User.Cidade" class="form-control" placeholder="Cidade" />
                    <ValidationMessage For="@(() => User.Cidade)" style="font-size: 15px;" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="User.Estado" class="form-control" placeholder="Estado" />
                    <ValidationMessage For="@(() => User.Estado)" style="font-size: 15px;" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="User.Cep" class="form-control" placeholder="CEP" />
                    <ValidationMessage For="@(() => User.Cep)" style="font-size: 15px;" />
                </div>
            </div>

            <div class="d-flex gap-3 mt-3">
                <div class="flex-fill w-25">
                    <label>Tipo de Perfil:</label><br />
                    <InputRadioGroup @bind-Value="User.Perfil">
                        <InputRadio Value="@TipoPerfilEnum.Residencial" /> Residencial
                        <InputRadio Value="@TipoPerfilEnum.Organizacional" class="ms-3" /> Organizacional
                    </InputRadioGroup>
                </div>

                <div class="flex-fill w-25">
                    <label>Quantidade de residentes:</label>
                    <InputNumber @bind-Value="User.QuantPessoas" TValue="int?" class="form-control w-120" placeholder="Quantidade de pessoas" />
                    <ValidationMessage For="@(() => User.QuantPessoas)" style="font-size: 15px;" />
                </div>
            </div>


            <button class="btn btn-primary w-100 mt-3" type="submit">Cadastrar</button>
        </EditForm>

        <div class="text-center mt-3">
            <span>Já tem uma conta?</span>
            <a href="/login" class="btn btn-outline-secondary btn-sm ms-2">Login</a>
        </div>
    </div>
</div>

@if (MostrarModalErro)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Erro no Cadastro</h5>
                    <button type="button" class="btn-close" @onclick="FecharModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>@MensagemErro</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="FecharModal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public Usuario User { get; set; } = new();
    private bool MostrarModalErro { get; set; }
    private string MensagemErro { get; set; } = string.Empty;

    private string SenhaInputType { get; set; } = "password";
    private string ConfirmaSenhaInputType { get; set; } = "password";

    private string SenhaIconClass => SenhaInputType == "password" ? "bi bi-eye-slash" : "bi bi-eye";
    private string ConfirmaSenhaIconClass => ConfirmaSenhaInputType == "password" ? "bi bi-eye-slash" : "bi bi-eye";

    private void ToggleSenhaVisibility() => SenhaInputType = SenhaInputType == "password" ? "text" : "password";
    private void ToggleConfirmaSenhaVisibility() => ConfirmaSenhaInputType = ConfirmaSenhaInputType == "password" ? "text" : "password";

    private async Task Cadastrar()
    {
        var sucesso = await Service.Register(User);
        if (sucesso)
        {
            NavManager.NavigateTo("/login");
        }
        else
        {
            MensagemErro = "Este e-mail já está cadastrado. Tente fazer login ou use outro e-mail.";
            MostrarModalErro = true;
        }
    }

    private void FecharModal()
    {
        MostrarModalErro = false;
    }
}
